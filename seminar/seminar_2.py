#--------------------------------------------------------
print("TASK 1")
# Циклы (for, while)
# По данному целому неотрицательному n вычислите
# значение n!. N! = 1 * 2 * 3 * … * N (произведение всех
# чисел от 1 до N) 0! = 1 Решить задачу используя цикл
# while

# n = 10
# res = 1

# while (n > 0) :
#     res = res * n
#     n = n - 1

# print(res)

#--------------------------------------------------------
print("TASK 2")
# Дано натуральное число A > 1. Определите, каким по
# счету числом Фибоначчи оно является, то есть
# выведите такое число n, что φ(n)=A. Если А не
# является числом Фибоначчи, выведите число -1.
# Input: 5
# Output: 6
# 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765

# a = int(input())
# fib = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765]
# i = 0
# num = 0
# reh = 0

# while (i < len(fib)) :
#     if (a == fib[i]) :
#         num = i + 1
#         reh = reh + 1
#         break
#     else:
#         i = i + 1  

# if reh == 1:
#     print(num)
# else:
#     print(-1)

#--------------------------------------------------------
print("TASK 3")
# Уставшие от необычно теплой зимы, жители решили узнать,
# действительно ли это самая длинная оттепель за всю историю
# наблюдений за погодой. Они обратились к синоптикам, а те, в
# свою очередь, занялись исследованиями статистики за
# прошлые годы. Их интересует, сколько дней длилась самая
# длинная оттепель. Оттепелью они называют период, в
# который среднесуточная температура ежедневно превышала
# 0 градусов Цельсия. Напишите программу, помогающую
# синоптикам в работе.
# Пользователь вводит число N – общее количество
# рассматриваемых дней (1 ≤ N ≤ 100). В следующих строках
# располагается N целых чисел.
# Каждое число – среднесуточная температура в
# соответствующий день. Температуры – целые числа и лежат в
# диапазоне от –50 до 50
# Input: 6 -> -20 30 -40 50 10 -10
# Output: 2

# n = int(input())
# i = 0
# num = 0
# res = 0

# while (i < n) :
#     num == 0
#     i = i + 1
#     m = int(input())

#     if (m < 0) :
#         m == 0
#     else :
#         num = num + 1    #2
#         res += 1       #3

# print(num)


#--------------------------------------------------------
print("TASK 4")
# Иван Васильевич пришел на рынок и решил
# купить два арбуза: один для себя, а другой для тещи.
# Понятно, что для себя нужно выбрать арбуз
# потяжелей, а для тещи полегче. Но вот незадача:
# арбузов слишком много и он не знает как же выбрать
# самый легкий и самый тяжелый арбуз? Помогите ему!
# Пользователь вводит одно число N – количество
# арбузов. Вторая строка содержит N чисел,
# записанных на новой строчке каждое. Здесь каждое
# число – это масса соответствующего арбуза
# Input: 5 -> 5 1 6 5 9
# Output: 1 9

# n = int(input("Введите колл арбузов"))
# n1 = int(input("Введите массу арбуза"))
# i = 0
# min = n1
# max = n1


# while (i < n) :
#     i = i + 1
#     arb = int(input("Введите массу арбуза"))
#     if (max < arb) :
#         max = arb
#     elif (min > arb) :
#         min = arb

# print (min, max)

#--------------------------------------------------------
print("TASK 5")
# На столе лежат n монеток. Некоторые из монеток лежат вверх решкой, а некоторые – гербом. 
# Ваша задача - определить минимальное количество монеток, которые нужно перевернуть, 
# чтобы все монетки лежали одной и той же стороной вверх.
# Входные данные:
# На вход программе подается список coins, где coins[i] равно 0, 
# если i-я монетка лежит гербом вверх, и равно 1, если i-я монетка лежит решкой вверх. 
# Размер списка не превышает 1000 элементов.
# Выходные данные:
# Программа должна вывести одно целое число - минимальное количество монеток, 
# которые нужно перевернуть.
# Пример использования На входе:

# coins = [0, 1, 0, 1, 1, 0]                0 - горб верх   1 - решка верх
# На выходе:
# 3


g = 0
r = 0
i = 0
coins = [0, 1, 0, 1, 1, 0]


while (i < len(coins)):
    if (coins[i] == 0 ):
        g = g + 1
    else:
        r = r + 1
    i = i + 1  
if (r <= g):
    print(r)
else:
    print(g)


#--------------------------------------------------------
print("TASK 6")
# Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате по математике.
# Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. 
# Для этого Петя делает две подсказки. Он называет сумму этих чисел S и их произведение P. 
# Помогите Кате отгадать задуманные Петей числа.
# Примечание: числа S и P задавать не нужно, они будут передаваться в тестах. 
# В результате вы должны вывести все возможные пары чисел X и Y через пробел, такие что X <= Y.

# На входе:
# s = 12
# p = 27
# На выходе:
# 3 9

S = 17      #cумма чисел x и y
P = 72      #произведение чисел x и y

y1 = int((S + ((-S) ** 2 - 4 * P) ** 0.5) / 2)
x1 = int((S - ((-S) ** 2 - 4 * P) ** 0.5) / 2)
print(x1, y1)


#--------------------------------------------------------
print("TASK 7")

# # Требуется вывести все целые степени двойки (т.е. числа вида 2k), 
# не превосходящие числа N.
# Пример
# n=16
# #Вывод
# 1
# 2
# 4
# 8
# 16

n = 3
i = 1
while (i <= n):
    print(i)
    i = i * 2
